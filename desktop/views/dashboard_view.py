"""
Dashboard View - Trang ch·ªß dashboard
"""

import tkinter as tk
from tkinter import ttk
from .base_view import BaseContentView
from config.constants import COLORS


class DashboardView(BaseContentView):
    """View cho dashboard ch√≠nh"""
    
    def __init__(self, parent_frame: ttk.Frame):
        # Kh·ªüi t·∫°o d·ªØ li·ªáu tr∆∞·ªõc khi g·ªçi super().__init__()
        self.dashboard_data = {}
        self._load_sample_data()
        
        super().__init__(parent_frame, "üìä Dashboard")
        self._setup_white_background()
    
    def _create_content(self):
        """T·∫°o n·ªôi dung dashboard"""
        # Welcome section
        self._create_welcome_section()
        
        # Statistics cards
        self._create_statistics_cards()
        
        # Recent activities
        self._create_recent_activities()
        
        # C·∫≠p nh·∫≠t background sau khi t·∫°o xong
        self._update_white_background()
    
    def _setup_white_background(self):
        """Thi·∫øt l·∫≠p background m√†u tr·∫Øng cho to√†n b·ªô view"""
        # C·∫•u h√¨nh background cho frame ch√≠nh
        self.main_frame.configure(style="White.TFrame")
        
        # C·∫•u h√¨nh background cho content frame
        self.content_frame.configure(style="White.TFrame")
    
    def _update_white_background(self):
        """C·∫≠p nh·∫≠t background m√†u tr·∫Øng cho t·∫•t c·∫£ c√°c frame con"""
        # C·∫•u h√¨nh background cho c√°c frame con
        for widget in self.content_frame.winfo_children():
            if isinstance(widget, ttk.Frame):
                widget.configure(style="White.TFrame")
                # C·∫≠p nh·∫≠t cho c√°c frame con b√™n trong
                for child in widget.winfo_children():
                    if isinstance(child, ttk.Frame):
                        child.configure(style="White.TFrame")
    
    def _load_sample_data(self):
        """Load d·ªØ li·ªáu m·∫´u cho dashboard"""
        self.dashboard_data = {
            'total_students': 1500,
            'total_classes': 50,
            'avg_score': 8.2,
            'active_teachers': 25,
            'recent_activities': [
                "H·ªçc sinh Nguy·ªÖn VƒÉn A ƒë·∫°t ƒëi·ªÉm cao m√¥n To√°n",
                "L·ªõp 10A1 c√≥ 95% h·ªçc sinh ƒë·∫°t ƒëi·ªÉm kh√° gi·ªèi",
                "C·∫≠p nh·∫≠t th√¥ng tin h·ªçc sinh m·ªõi",
                "B√°o c√°o th√°ng 12 ƒë√£ ƒë∆∞·ª£c t·∫°o",
                "H·ªçp ph·ª• huynh l·ªõp 11A1"
            ]
        }
    
    def _create_welcome_section(self):
        """T·∫°o ph·∫ßn ch√†o m·ª´ng"""
        welcome_frame = ttk.Frame(self.content_frame, style="White.TFrame")
        welcome_frame.grid(row=0, column=0, sticky="ew", padx=10, pady=10)
        welcome_frame.columnconfigure(0, weight=1)
        
        welcome_label = ttk.Label(welcome_frame, 
                                text="Ch√†o m·ª´ng ƒë·∫øn v·ªõi h·ªá th·ªëng qu·∫£n l√Ω tr∆∞·ªùng h·ªçc", 
                                style="White.TLabel", font=("Helvetica", 16, "bold"))
        welcome_label.grid(row=0, column=0, pady=10)
        
        subtitle_label = ttk.Label(welcome_frame, 
                                 text="Qu·∫£n l√Ω h·ªçc sinh, ƒëi·ªÉm s·ªë v√† b√°o c√°o m·ªôt c√°ch hi·ªáu qu·∫£", 
                                 style="White.TLabel", font=("Helvetica", 12))
        subtitle_label.grid(row=1, column=0, pady=5)
    
    def _create_statistics_cards(self):
        """T·∫°o c√°c th·∫ª th·ªëng k√™"""
        stats_frame = ttk.Frame(self.content_frame, style="White.TFrame")
        stats_frame.grid(row=1, column=0, sticky="ew", padx=10, pady=10)
        stats_frame.columnconfigure(0, weight=1)
        stats_frame.columnconfigure(1, weight=1)
        stats_frame.columnconfigure(2, weight=1)
        stats_frame.columnconfigure(3, weight=1)
        
        # T·∫°o 4 th·∫ª th·ªëng k√™
        self._create_stat_card(stats_frame, "üë• T·ªïng h·ªçc sinh", 
                             str(self.dashboard_data['total_students']), 
                             COLORS['primary'], 0, 0)
        
        self._create_stat_card(stats_frame, "üìö T·ªïng l·ªõp h·ªçc", 
                             str(self.dashboard_data['total_classes']), 
                             COLORS['secondary'], 0, 1)
        
        self._create_stat_card(stats_frame, "üìä ƒêi·ªÉm TB", 
                             str(self.dashboard_data['avg_score']), 
                             COLORS['accent'], 0, 2)
        
        self._create_stat_card(stats_frame, "üë®‚Äçüè´ Gi√°o vi√™n", 
                             str(self.dashboard_data['active_teachers']), 
                             COLORS['success'], 0, 3)
    
    def _create_stat_card(self, parent, title, value, color, row, col):
        """T·∫°o m·ªôt th·∫ª th·ªëng k√™"""
        card = ttk.Frame(parent, style="White.TFrame", relief="solid", borderwidth=1, padding=15)
        card.grid(row=row, column=col, padx=5, pady=5, sticky="nsew")
        card.columnconfigure(0, weight=1)
        
        title_label = ttk.Label(card, text=title, font=("Helvetica", 12, "bold"), 
                              background="white", foreground=COLORS['text_secondary'])
        title_label.pack(pady=(0, 5))
        
        value_label = ttk.Label(card, text=value, font=("Helvetica", 24, "bold"), 
                              background="white", foreground=color)
        value_label.pack()
    
    def _create_recent_activities(self):
        """T·∫°o ph·∫ßn ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y"""
        activities_frame = ttk.Frame(self.content_frame, style="White.TFrame")
        activities_frame.grid(row=2, column=0, sticky="nsew", padx=10, pady=10)
        activities_frame.columnconfigure(0, weight=1)
        activities_frame.rowconfigure(1, weight=1)
        
        # Title
        title_label = ttk.Label(activities_frame, text="üïí Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y", 
                              style="White.TLabel", font=("Helvetica", 14, "bold"))
        title_label.grid(row=0, column=0, sticky="w", pady=(0, 10))
        
        # Activities list
        activities_list = tk.Text(activities_frame, wrap="word", height=8, 
                                font=("Helvetica", 11), bg="white", fg=COLORS['text_primary'])
        activities_list.grid(row=1, column=0, sticky="nsew")
        
        # Th√™m d·ªØ li·ªáu ho·∫°t ƒë·ªông
        for activity in self.dashboard_data['recent_activities']:
            activities_list.insert("end", f"‚Ä¢ {activity}\n")
        
        activities_list.config(state="disabled")  # Ch·ªâ ƒë·ªçc
    
    def refresh(self):
        """Refresh dashboard data"""
        self._load_sample_data()
        # C√≥ th·ªÉ th√™m logic refresh UI ·ªü ƒë√¢y



